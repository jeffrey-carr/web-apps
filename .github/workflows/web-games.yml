# Deployment workflow for web_games
name: Deploy Web Games
on:
  push:
    tags:
      - 'web_games-v*'
jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Java Version 21
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '21'
          cache: 'maven'
          
      # TODO - check if this is necessary
      - name: Build dependency
        working-directory: packages/java-common
        run: mvn clean install
      
      - name: Build JAR
        working-directory: apps/web_games/backend
        run: mvn clean install
        
      - name: Create backend folder
        run: mkdir -p build/backend

      - name: Remove original JAR (this is dumb)
        working-directory: apps/web_games/backend
        run: rm target/*.original

      - name: Copy JAR
        run: cp apps/web_games/backend/target/*.jar build/backend/
      
      - name: Archive project build
        run: tar -cvf project-build.tar ./build
        
      - name: Upload backend artifact
        uses: actions/upload-artifact@v4
        with:
          name: project-build
          path: project-build.tar
          
  build-frontend:
    needs: build-backend
    runs-on: ubuntu-latest
    steps:
      - name: Download backend artifact
        uses: actions/download-artifact@v4
        with:
          name: project-build
          path: .
          
      - name: Extract backend artifact
        run: tar -xvf project-build.tar
        
      - name: List available files
        run: ls
      
      - name: Create frontend folder
        run: mkdir build/frontend
        
      - name: Checkout repo
        uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        
      - name: Install dependencies
        working-directory: apps/web_games/frontend
        run: npm install

      - name: Build project
        working-directory: apps/web_games/frontend
        run: npm run build
        
      - name: List build files
        run: ls -R apps/web_games/frontend/build
        
      - name: List a bunch of info
        run: |
          pwd
          ls -R
          ls -R build
        
      - name: Move frontend build to artifacts
        run: |
          mv apps/web_games/frontend/build build/frontend
          mv build/frontend/build build/frontend/web-games-frontend
          
      - name: Zip project build
        run: tar -cvf build.tar ./build
        
      - name: Upload project artifact
        uses: actions/upload-artifact@v4
        with:
          name: build.tar
          path: build.tar
          
  deploy:
    needs: build-frontend
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build.tar
          
      - name: Copy build to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ vars.SERVER_IP }}
          username: ${{ vars.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          source: build.tar
          target: "~/."
          
      - name: Unzip tar
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.SERVER_IP }}
          username: ${{ vars.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            tar -xvf ~/build.tar -C .
            cp build/backend/web-games-backend.jar web-games-backend/
            sudo systemctl restart web-games-backend
            sudo cp build/frontend/web-games-frontend /var/www/
            rm build.tar
            rm -rf build
